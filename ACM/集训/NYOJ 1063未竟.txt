#include <cstdio>
#include <stdlib.h>
#include <vector>
using namespace std;
typedef struct node
{
    int n;
    struct node* pLeft;
    struct node* pRight;
}NODE, *PNODE;
char s[20];
vector<int> a[100];
void CreatTree(PNODE p, int ceng)
{
    scanf("%s", s);
    if(*s == '#')
    {
        p = NULL;
        return ;
    }    
    a[ceng].push_back(atoi(s));
    p = (PNODE)malloc(sizeof(NODE));
    p->n = atoi(s);
    CreatTree(p->pLeft, ceng+1);
    CreatTree(p->pRight, ceng+1);
}

void FREE(PNODE p)
{
    if(p->pLeft)
        FREE(p->pLeft);
    if(p->pRight)
        FREE(p->pRight);
    free(p);
}

int main(void)
{
    int n, N;
    PNODE pRoot;
    scanf("%d\n", &N);
    while(N--)
    {
        CreatTree(pRoot, 1);
        scanf("%s %d", s, &n);
        printf("%d", a[n][0]);
        for(int i=1; i<a[n].size(); ++i)
            printf("~%d", a[n][i]);
        printf("\n");
        for(int i=0; i<100; ++i)
            a[i].clear();
        FREE(pRoot);
    }
}
