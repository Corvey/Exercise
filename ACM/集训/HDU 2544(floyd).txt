#include <cstdio>
#include <string.h>
#include <algorithm>
using namespace std;
const int N = 200, INF = 0x3f3f3f3f;
int edge[N][N];
int floyd(int n)
{
    for(int k=0; k<n; ++k)
        for(int i=0; i<n; ++i)
            for(int j=0; j<n; ++j)
                edge[i][j] = min(edge[i][j], edge[i][k] + edge[k][j]);
    return edge[0][n-1];
}
int main(void)
{
    int n, m, from, to, d;
    while(scanf("%d %d", &n, &m), n+m)
    {
        memset(edge, INF, sizeof(edge));
        for(int i=0; i<m; ++i)
        {
            scanf("%d %d %d", &from, &to, &d);
            --from, --to;
            edge[from][to] = edge[to][from] = min(edge[from][to], d);
        }
        printf("%d\n", floyd(n));
    }
}
