#include <cstdio>
#include <algorithm>
using namespace std;
const int N = 1100, M = 25000;
struct SIDE
{
    int from;
    int to;
    int d;
}edge[M];
int cnt[N];
int Find(int x){
    return cnt[x] == x ? x : Find(cnt[x]);
}
bool cmp(const SIDE a, const SIDE b){
    return a.d > b.d;
}
int main(void)
{
    int n, m, sum, a, b;
    while(~scanf("%d %d", &n, &m))
    {
        for(int i=0; i<m; ++i)
            scanf("%d %d %d", &edge[i].from, &edge[i].to, &edge[i].d);
        sort(edge, edge+m, cmp);
        for(int i=1; i<=n; ++i)
            cnt[i] = i;
        sum = 0;
        for(int i=0; i<m && n-1; ++i)
        {
            a = Find(edge[i].from);
            b = Find(edge[i].to);
            if(a != b)
                cnt[b] = a, sum += edge[i].d, --n;
        }
        printf("%d\n", n-1 ? -1 : sum);
    }
}
