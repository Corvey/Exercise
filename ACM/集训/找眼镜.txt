#include <stdio.h>
#include <stdlib.h>
int a[1000000], c[1000000];
int cmp(const void *a, const void *b)
{
    return (*(int *)a)<(*(int *)b) ? 1 : 0;
}
int HalfSearch(int x, int left, int right)
{
    int mid = (left+right)/2;
    if(left > right)
        return -1;
    if(x < a[mid])
        return HalfSearch(x, mid+1, right);
    else if(x > a[mid])
        return HalfSearch(x, left, mid-1);
    else
        return mid;
}
int main(void)
{
    int n;
    while(~scanf("%d", &n))
    {
        for(int i=0; i<n; ++i)
        {
            scanf("%d", a+i);
            c[i] = a[i];
        }
        qsort(a, n, sizeof(int), cmp);
        /*
        for(int i=0; i<n; ++i)
            printf("%d ", a[i]);
        printf("\n");
        for(int i=0; i<n; ++i)
            printf("%d ", c[i]);
        printf("\n");
        */
        int t;
        for(int i=0; i<n-1; ++i)
        {
            t = HalfSearch(c[i], 0, n-1);
            for(; t-1>=0 && a[t-1]==a[t]; --t);
            printf("%d ", t+1);
        }
        t = HalfSearch(c[n-1], 0, n-1);
        for(; t-1>=0 && a[t-1]==a[t]; --t);
        printf("%d\n", t+1);
    }
}